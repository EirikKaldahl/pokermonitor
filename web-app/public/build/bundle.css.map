{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../BlindViewer.svelte",
    "../../Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { getContext } from 'svelte';\n  import Timer from './Timer.svelte';\n  import BlindsController from './BlindsController/BlindsController.svelte';\n  import BlindViewer from './BlindsController/BlindViewer.svelte';\n  import data from './data';\n\n  let timeFromUser = data.timePerRound;\n  let index = 0;\n  let bigBlind = data.blinds[index];\n  let smallBlind = bigBlind / 2;\n  const incLevel = () => {\n    if (index === data.blinds.length - 1) {\n      console.log('GameOver', 'background:red');\n    } else {\n      index++;\n    }\n  };\n  console.log(data);\n\n  // These react to index increment\n  $: {\n    bigBlind = data.blinds[index];\n    smallBlind = bigBlind / 2;\n    timeFromUser = data.timePerRound;\n  }\n</script>\n\n<style>\n  main {\n    text-align: center;\n  }\n  h1 {\n    margin-top: 0;\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 13em;\n    font-weight: 100;\n  }\n</style>\n\n<main>\n  <h1>Pokr2kr</h1>\n  <Timer {timeFromUser} {incLevel} />\n  <BlindViewer {bigBlind} {smallBlind} />\n</main>\n",
    "<script>\n  export let bigBlind;\n  export let smallBlind;\n</script>\n\n<style>\n  .flexContainer {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 200px;\n  }\n  .mainWrapper {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n  }\n</style>\n\n<div class=\"mainWrapper\">\n  <div class=\"flexContainer\">\n    <h3>Small Blind</h3>\n    <p>{smallBlind}</p>\n  </div>\n  <div class=\"flexContainer\">\n    <h3>Big Blind</h3>\n    <p>{bigBlind}</p>\n  </div>\n</div>\n",
    "<script>\n  import { setContext } from 'svelte';\n  export let timeFromUser;\n  export let incLevel;\n  const resetTimer = () => {\n    return timeFromUser * 1000;\n  };\n  let timeRemaining = resetTimer();\n  const audio = new Audio(\n    'https://www.soundjay.com/button/beep-01a.mp3'\n  );\n\n  const oneMin = 60 * 1000;\n  const tenSec = 10000;\n\n  const reduceTime = () => {\n    if (timeRemaining == oneMin) {\n      audio.play();\n    }\n    if (timeRemaining > 0 && timeRemaining < tenSec) {\n      audio.play();\n    }\n    if (timeRemaining === 0) {\n      incLevel();\n      timeRemaining = resetTimer();\n      clearInterval(interval);\n      interval = setInterval(reduceTime, 1000);\n    }\n    timeRemaining = Math.max(0, timeRemaining - 1000);\n  };\n  let interval = setInterval(reduceTime, 1000);\n</script>\n\n<style>\n  div {\n    color: gold;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  p {\n    font-size: 6rem;\n    margin: 0;\n  }\n</style>\n\n<div>\n  <p>Time left: {timeRemaining / 1000}s</p>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA6BE,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,CAAC,CACb,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AAClB,CAAC;AChCD,cAAc,eAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,KAAK,AACd,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,MAAM,AACzB,CAAC;ACkBD,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,CAAC,cAAC,CAAC,AACD,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,AACX,CAAC"
}